-- Create the table & name from CSV file
-- CREATE DATABASE Project_Finder;

CREATE TABLE Project_Finder.STUDENT (
  -- Enter each entity, data type, characters, and any additional restrictions
    NetID CHAR(9) PRIMARY KEY,
    Pass VARCHAR(50) NOT NULL CHECK (
      LENGTH(Pass) BETWEEN 10 AND 50
    ),
    Email VARCHAR(255) NOT NULL,
    Phone VARCHAR(15),
    Name VARCHAR(255) NOT NULL,
    Pronouns VARCHAR(50)
);

CREATE TABLE Project_Finder.STUDENT_SOCIALS (
    NetID CHAR(9),
    Platform VARCHAR(100) NOT NULL,
    Username VARCHAR(100) NOT NULL,
    PRIMARY KEY (NetID, Platform),
    FOREIGN KEY (NetID) REFERENCES STUDENT(NetID) ON DELETE CASCADE
);

CREATE TABLE Project_Finder.PROJECT (
    PID INT PRIMARY KEY,
    Name VARCHAR(255) NOT NULL,
    Description VARCHAR(500),
    Tag VARCHAR(255) NOT NULL,
    Capacity INT DEFAULT 3,
    Date_posted TIMESTAMP NOT NULL,
    NetID CHAR(9) NOT NULL,
    FOREIGN KEY (NetID) REFERENCES STUDENT(NetID) ON DELETE RESTRICT
);

CREATE TABLE Project_Finder.PROJECT_CODING_LANGUAGES (
    PID INT,
    Language VARCHAR(100) NOT NULL,
    Relative_experience VARCHAR(50),
    PRIMARY KEY (PID, Language),
    FOREIGN KEY (PID) REFERENCES PROJECT(PID) ON DELETE CASCADE
);

CREATE TABLE Project_Finder.WORKS_ON (
    NetID CHAR(9),
    PID INT,
    PRIMARY KEY (NetID, PID),
    FOREIGN KEY (NetID) REFERENCES STUDENT(NetID) ON DELETE CASCADE,
    FOREIGN KEY (PID) REFERENCES PROJECT(PID) ON DELETE CASCADE
);

CREATE TABLE Project_Finder.INFRACTION (
    InfractionID INT PRIMARY KEY,
    Description VARCHAR(500) NOT NULL
);

CREATE TABLE Project_Finder.ASSOCIATED_WITH (
    InfractionID INT,
    NetID CHAR(9),
    Resolved INT DEFAULT 0,
    PRIMARY KEY (InfractionID, NetID),
    FOREIGN KEY (InfractionID) REFERENCES INFRACTION(InfractionID) ON DELETE CASCADE,
    FOREIGN KEY (NetID) REFERENCES STUDENT(NetID) ON DELETE CASCADE
);
